{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","Response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAGaA,G,kBAAM,SAACC,GAAD,OACnB,yBAAKC,UAAU,kBAEf,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,4BAAKL,EAAMI,QAAQE,MACnB,2BAAIN,EAAMI,QAAQG,UCJLC,EAAU,SAACR,GAAD,OACnB,yBAAKC,UAAU,aAAaD,EAAMS,SAASC,KACvC,SAAAN,GAAO,OAAG,kBAAC,EAAD,CAAMO,IAAOP,EAAQC,GAAID,QAAWA,SCHzCQ,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACpB,2BAAOb,UAAU,SACjBc,KAAK,SACLF,YAAaA,EACZG,SAAUF,MCiDAG,E,kDA/Cb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbpC,EAAKC,MAAM,CAETd,SAAU,GAEVW,YAAa,IANJ,E,qDAUb,WAAoB,IAAD,OACjBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACV,SAASmB,S,oBAO1H,WAGE,MAAgCC,KAAKN,MAA9Bd,EAAP,EAAOA,SAAUW,EAAjB,EAAiBA,YAIXU,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OAEE,yBAAK/B,UAAU,OACf,+CAIA,kBAAC,EAAD,CAAWY,YAAY,kBACtBC,aAAgBe,KAAKf,eAItB,kBAAC,EAAD,CAAUL,SAAUqB,S,GA1CRI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3d4f6b0.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\n\nexport const Card =(props) =>(\n<div className=\"card-container\">\n\n<img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n<h2>{props.monster.name}</h2>\n<p>{props.monster.email}</p>\n</div>\n\n\n)","import React from 'react';\nimport './card-list.css';\nimport {Card} from '../card/card';\n\nexport const CardList =(props) => (\n    <div className=\"card-list\">{props.monsters.map(\n        monster=> <Card key = {monster.id} monster = {monster}/>\n        )}\n        </div>\n)","import React from 'react'\nimport './search-box.css'\n\nexport const SearchBox =({placeholder, handleChange}) =>(\n    <input className='search'\n    type='search' \n    placeholder={placeholder}\n     onChange={handleChange}\n     />\n)","\nimport './App.css';\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list';\n\nimport {SearchBox} from './components/search-box/search-box';\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state={\n\n      monsters: [],\n\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(Response=>Response.json()).then(users=>this.setState({monsters:users}));\n  }\n\n  handleChange = (e)=>{\n    this.setState({searchField:e.target.value});\n  }\n\n  render(){\n\n   \n    const {monsters, searchField} = this.state;\n\n\n\n    const filteredMonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return(\n\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n\n  \n\n      <SearchBox placeholder='search monsters'\n       handleChange = {this.handleChange}\n       />\n\n\n      <CardList monsters={filteredMonsters}/>\n    </div>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}